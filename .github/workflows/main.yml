name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Run Tests and Generate Allure Report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        name: Install latest Node
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: npx playwright test --reporter=allure-playwright

      - name: Upload Allure Report Data
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Download Allure Report Data
        uses: actions/download-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Generate Allure Report
        run: npx allure generate allure-results --clean -o allure-report

      - name: Push Allure Report to gh-pages branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git fetch origin gh-pages || git checkout --orphan gh-pages
          git reset --hard
          cp -r allure-report/* .
          git add .
          git commit -m "Add Allure report"
          git push -f origin gh-pages

      - name: Generate GitHub Pages Link
        id: pages_link
        run: echo "REPO_URL=https://$(echo ${GITHUB_REPOSITORY} | sed -e 's/\//./')/gh-pages/" >> $GITHUB_ENV

      - name: Output GitHub Pages Link
        run: echo "The latest Allure report is available at ${{ env.REPO_URL }}"

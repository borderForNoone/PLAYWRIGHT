name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy:
  name: Deploy Allure Report
  runs-on: ubuntu-latest
  needs: test  # Ensures this job runs after the `test` job

  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download Allure Report Data from Previous Runs
      uses: actions/download-artifact@v3
      with:
        name: allure-results

    - name: Install Allure Commandline
      run: npm install --save-dev allure-commandline

    - name: Generate Allure Report
      run: npx allure generate allure-results --clean -o allure-report

    - name: Push Allure Report to `gh-pages` branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Set up git
        git config --global user.email "deniska2002kulikov@gmail.com"
        git config --global user.name "borderForNoone"
        
        # Check out the `gh-pages` branch
        git fetch origin gh-pages || git checkout --orphan gh-pages
        git worktree add gh-pages gh-pages
        cd gh-pages
        # Clear the `gh-pages` branch content
        rm -rf ./*
        # Copy the Allure report to the `gh-pages` branch
        cp -R ../allure-report/* .
        # Commit and push the report to the `gh-pages` branch
        git add .
        git commit -m "Update Allure report"
        git push origin gh-pages

    - name: Set up GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GH_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./allure-report

    - name: Update GitHub Pages URL in Repo Description
      run: |
        curl -X PATCH "https://api.github.com/repos/${{ github.repository }}" \
        -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        -d '{"description": "Allure Report: https://borderForNoone.github.io/PLAYWRIGHT/"}'
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

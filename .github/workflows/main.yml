name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Run Tests and Generate Allure Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install dependencies
        run: |
          npm install
          - name: Install dependencies
        run: |
          npm install
          sudo apt-get update
          sudo apt-get install -y \
            libvpx-dev \
            libevent-dev \
            libopus-dev \
            libgstreamer1.0-0 \
            libgstreamer-plugins-base1.0-0 \
            libharfbuzz0b \
            libhyphen0 \
            libmanette-0.2-0 \
            flite \
            libflite1 \
            libgles2-mesa-dev \
            libx264-dev \
            libnss3 \
            libatk-bridge2.0-0 \
            libatk1.0-0 \
            libcups2 \
            libx11-xcb1 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libxss1 \
            libxtst6 \
            libgbm1 \
            libgtk-3-0 \
            libasound2

      - name: Run tests
        run: npm test

      - name: Upload Allure Report Data
        if: always()  # Ensure this runs even if previous steps fail
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Download Allure Report Data from Previous Runs
        uses: actions/download-artifact@v3
        with:
          name: allure-results

      - name: Generate Allure Report
        run: npm run allure:report

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report

      - name: Set up GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          
      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Update GitHub Pages URL in Repo Description
        run: |
          curl -X PATCH "https://api.github.com/repos/${{ github.repository }}" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"description": "Allure Report: https://borderForNoone.github.io/PLAYWRIGHT/"}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
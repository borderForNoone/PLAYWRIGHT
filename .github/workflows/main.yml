name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Run Tests and Generate Allure Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Download Browsers
        run: npx playwright install

      - name: Run tests
        run: npx playwright test --reporter=list

      - name: Upload Allure Report Data
        if: always()  # Ensure this runs even if previous steps fail
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: allure-results

      - name: Download Allure Report Data from Previous Runs
        uses: actions/download-artifact@v3
        with:
          name: allure-results

      - name: Generate Allure Report
        run: npx allure generate allure-results --clean -o allure-report

      - name: Push Allure Report to `gh-pages` branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set up git
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Check out the `gh-pages` branch
          git fetch origin gh-pages
          git worktree add gh-pages gh-pages
          cd gh-pages
          # Copy the Allure report to the `gh-pages` branch
          cp -R ../allure-report/* .
          # Commit and push the report to the `gh-pages` branch
          git add .
          git commit -m "Update Allure report"
          git push origin gh-pages
      - name: Set up GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report

      - name: Update GitHub Pages URL in Repo Description
        run: |
          curl -X PATCH "https://api.github.com/repos/${{ github.repository }}" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"description": "Allure Report: https://borderForNoone.github.io/PLAYWRIGHT/"}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}